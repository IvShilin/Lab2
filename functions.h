/***********************************************************************************************************************
*                                               ПРОТОТИПЫ ФУНКЦИЙ                                                      *
***********************************************************************************************************************/

#include <iostream>                         // Подключение библиотеки стандартных команд
#include <cstdlib>                          // Подключение библиотеки
#include <fstream>                          // Подключение библиотеки ввода/вывода
#include <chrono>                           // Подключение библиотеки для таймера
#include <windows.h> // используется только в CLion для нормально работы консоли с кодировкой UTF-8

using namespace std;                        // Пространство имен std

// Функция считывания и создания массивов
void readAndCreate(
        int **array,                        // Динамический массив указателей
        int **arrayFutureSourted,           // Отсортированный массив указателей
        int &size,                          // Длина массива
        const char *FILE_INPUT              // Имя выходного файла
);

// Функция наполнения массивов
void fillingOfArrays(
        int **array,                        // Динамический массив указателей
        int **arrayFutureSourted,           // Отсортированный массив указателей
        int size                            // Длина массива
);

// Функция вывода массива
void arraysOutput(
        int **array,                        // Динамический массив указателей
        int size                            // Длина массива
);

// Функция быстрой рекурсивной сортировки
void quickRecursiveSort(
        int **array,                        // Динамический массив указателей
        int left,                           // Левая граница массива
        int right                           // Правая граница массива
);

// Функция линейного поиска
void sentinelLinearSearch(
        int **array,                        // Динамический массив указателей
        int SIZE,                           // Длина массива
        int key                             // Ключ индексов
);

// Функция смена ключа
int changeKey(
        int **Array,                        // Динамический массив указателей
        int number,                         // Переменная для передачи значения ключа
        int SIZE                            // Ключ индексов
);

// Функция поиска
void T_find(
        int **array,                        // Динамический массив указателей
        int SIZE,                           // Длина массива
        int key                             // Ключ индексов
);

// Функция очищения памяти
void deleteArrs(
        const int *ARRAY,                   // Динамический массив указателей
        const int *ARRAY_SORTED             // Отсортированный массив указателей
);

#pragma once